"""simplify relationship between List and Task models

Revision ID: eb7498987d3c
Revises: 
Create Date: 2025-05-30 16:42:28.977121

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'eb7498987d3c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('lists', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_lists_user_order'))

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_tasks_due_date'))
        batch_op.drop_index(batch_op.f('idx_tasks_list_completed'))
        batch_op.drop_index(batch_op.f('idx_tasks_parent_order'))
        batch_op.drop_index(batch_op.f('ix_tasks_parent_id'))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('task_depth')
        batch_op.drop_column('due_date')
        batch_op.drop_column('order_index')
        batch_op.drop_column('parent_id')
        batch_op.drop_column('priority')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('priority', sa.VARCHAR(length=20), nullable=False))
        batch_op.add_column(sa.Column('parent_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('order_index', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('due_date', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('task_depth', sa.INTEGER(), nullable=False))
        batch_op.create_foreign_key(None, 'tasks', ['parent_id'], ['id'])
        batch_op.create_index(batch_op.f('ix_tasks_parent_id'), ['parent_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_tasks_parent_order'), ['parent_id', 'order_index'], unique=False)
        batch_op.create_index(batch_op.f('idx_tasks_list_completed'), ['list_id', 'is_completed'], unique=False)
        batch_op.create_index(batch_op.f('idx_tasks_due_date'), ['due_date'], unique=False)

    with op.batch_alter_table('lists', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_lists_user_order'), ['user_id', 'order_index'], unique=False)

    # ### end Alembic commands ###
